name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  SWIFT_VERSION: '6.0'

jobs:
  lint:
    name: SwiftLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: SwiftLint
        uses: norio-nomura/action-swiftlint@3.2.1
        with:
          args: --strict

  build-and-test:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        swift: ['6.0']
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Swift
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: ${{ matrix.swift }}
      
      - name: Show Swift version
        run: swift --version
      
      - name: Build
        run: swift build -v --warnings-as-errors
      
      - name: Run tests
        run: swift test -v
      
      - name: Build all examples
        run: |
          for example in Examples/*/; do
            if [ -d "$example" ]; then
              echo "Building $(basename $example)..."
              swift build --package-path . --product $(basename $example)
            fi
          done

  test-coverage:
    name: Test Coverage
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Swift
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: ${{ env.SWIFT_VERSION }}
      
      - name: Generate Coverage
        run: |
          swift test --enable-code-coverage
          xcrun llvm-cov export -format="lcov" \
            .build/debug/MatchaPackageTests.xctest/Contents/MacOS/MatchaPackageTests \
            -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.lcov
          flags: unittests
          name: matcha-coverage
          fail_ci_if_error: true

  documentation:
    name: Build Documentation
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Swift
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: ${{ env.SWIFT_VERSION }}
      
      - name: Build Documentation
        run: |
          swift package generate-documentation \
            --target Matcha \
            --target MatchaBubbles \
            --target MatchaStyle \
            --output-path ./docs/api-reference
      
      - name: Upload Documentation Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: ./docs/api-reference

  examples-smoke-test:
    name: Examples Smoke Test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Swift
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: ${{ env.SWIFT_VERSION }}
      
      - name: Test Counter Example
        run: |
          swift build --product CounterExample
          # Run with timeout and expect it to start successfully
          timeout 5s ./.build/debug/CounterExample || [ $? -eq 124 ]
      
      - name: Test Simple Example
        run: |
          swift build --product Simple
          # This example should exit cleanly
          ./.build/debug/Simple